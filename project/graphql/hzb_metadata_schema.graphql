# metamodel_version: 1.7.0
type Beamline
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type BeamlineExperiment
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type BeamlineScientist
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
    primaryEmail: String
    birthDate: Date
    ageInYears: Integer
    gender: GenderEnum
    hasEmploymentHistory: [String]
  }

type CatalysisSample
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type CatalysisSampleCollection
  {
    entries: [CatalysisSample]
  }

type Catalyst
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

interface ChemicalOrDrugOrTreatment
  {
  }

type DataCite
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type Device
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type EMILOAESE
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type EMILPink
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

interface Entity
  {
    id: Uriorcurie!
    iri: String
    name: String
  }

type Experiment
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type Measurement
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type Mixture
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type MySpot
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type NamedEntity
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type Parameter
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type Person
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
    primaryEmail: String
    birthDate: Date
    ageInYears: Integer
    gender: GenderEnum
    hasEmploymentHistory: [String]
  }

type PowderCatalyst
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type Process
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type Project
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type Reaction
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type ReactionProduct
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type ReactionProductCollection
  {
    entries: [ReactionProduct]
  }

type Reactor
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type Recipe
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type Sample
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type SampleCollection
  {
    entries: [Sample]
  }

type SampleEnvironment
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type SamplePositioning
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type Scientist
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
    primaryEmail: String
    birthDate: Date
    ageInYears: Integer
    gender: GenderEnum
    hasEmploymentHistory: [String]
  }

type ThinFilmCatalyst
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

type Workflow
  {
    id: Uriorcurie!
    iri: String
    name: String
    category: String!
  }

